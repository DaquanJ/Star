{"version":3,"sources":["components/Sign.jsx","components/Footer.jsx","components/Horoscope.jsx","App.js","serviceWorker.js","index.js"],"names":["Sign","props","handleChange","e","setState","target","id","value","toUpperCase","console","log","state","className","src","alt","onChange","type","placeholder","required","to","this","sign","style","display","Component","Footer","Horoscope","match","useState","horoscope","setHoroscope","day","setDay","getHoroscope","a","axios","post","params","res","data","error","useEffect","onClick","preventDefault","getDay","onSubmit","current_date","description","mood","compatibility","color","lucky_number","lucky_time","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.38c721c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/horoscope.css';\n\nclass Sign extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value.toUpperCase() })\n        console.log(this.state)\n    }\n\n    render() {\n        return (\n            <div className='page' >\n                <h1> Your Star </h1>\n                <div id='signs'>\n                    <img src=\"https://static.wixstatic.com/media/e6f9d7_1cf63a10d9124730b66cfb48e7683a83~mv2.png/v1/fill/w_504,h_508,al_c,q_85,usm_0.66_1.00_0.01/Zodiac%20Wheel.webp\" alt=\"signs\" />\n                </div>\n                <div className='sign-page' >\n                    <form onChange={(e) => this.handleChange(e)} className='sign-input' >\n                        <input id='sign' type=\"text\" placeholder=\"Tell us your sign, then press enter . . .\" required />\n                        <Link id='horoscope' to={`/horoscope/${this.state.sign}`} > <input style={{ display: 'none' }} type=\"submit\" value=\"Find out your Horoscope\" /> </Link>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/nav.css';\n\nconst Footer = () => {\n\n    return (\n        <div className='footer' >\n            <hr />\n            <ul id='footer-list' >\n                <Link id='footer-links' to='/' > <li id='footer-links' > &copy; Your Star 2020 By Per Scholas </li> </Link>\n            </ul>\n        </div>\n    );\n}\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nconst Horoscope = ({ match }) => {\n\n    const [horoscope, setHoroscope] = useState([]);\n    const [day, setDay] = useState({ day: 'today' });\n\n    const getHoroscope = async () => {\n        try {\n            const res = await axios.post(`https://aztro.sameerkumar.website?sign=${match.params.sign}&day=${day.day}`)\n            setHoroscope(res.data)\n            console.log(res.data)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const getDay = (e) => {\n        e.preventDefault();\n        const { id, value } = e.target;\n        setDay({ [id]: value })\n        console.log(day)\n    }\n\n    useEffect(() => {\n        getHoroscope();\n    }, [day.day])\n\n    return (\n        <div>\n            <Link to='/' > <h1 id='app-name' > Your Star </h1> </Link>\n            <form className='days' onClick={(e) => getDay(e)} onSubmit={getHoroscope} >\n                <input type=\"submit\" value='yesterday' id='day' />\n                <input type=\"submit\" value='today' id='day' />\n                <input type=\"submit\" value='tomorrow' id='day' />\n            </form>\n            <div className='zodiac' >\n                <h1 id=\"title\"> {match.params.sign}</h1>\n                <div className=\"the-date\" >\n                    <p id=\"the-day\" > {day.day} </p>\n                    <p id=\"date\">  {horoscope.current_date} </p>\n                </div>\n                <div id='horoscope'>\n                    <h2 id=\"horoscope-head\" > Horoscope </h2>\n                    <p id=\"horoscope\"> {horoscope.description} </p>\n                </div>\n                <ul className='info'>\n                    <h3 id=\"basics\"> BASICS </h3>\n                    <li id=\"mood\"> Mood: {horoscope.mood} </li>\n                    <li id=\"compatibility\"> Compatibility: {horoscope.compatibility} </li>\n                    <li id=\"color\" > Color: {horoscope.color} </li>\n                    <li id=\"number\"> Lucky Number: {horoscope.lucky_number} </li>\n                    <li id=\"time\"> Lucky Time: {horoscope.lucky_time} </li>\n                </ul>\n                <div id='signs-app'>\n                    <img src=\"https://static.wixstatic.com/media/e6f9d7_1cf63a10d9124730b66cfb48e7683a83~mv2.png/v1/fill/w_504,h_508,al_c,q_85,usm_0.66_1.00_0.01/Zodiac%20Wheel.webp\" alt=\"signs\" />\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Horoscope;","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Sign from './components/Sign';\nimport Footer from './components/Footer';\nimport Horoscope from './components/Horoscope';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Sign} />\n          <Route path='/horoscope/:sign' component={Horoscope} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}